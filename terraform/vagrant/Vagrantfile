plugins_dependencies = %w( vagrant-hostmanager vagrant-disksize vagrant-docker-compose vagrant-vbguest)
plugin_status = false
plugins_dependencies.each do |plugin_name|
  unless Vagrant.has_plugin? plugin_name
    system("vagrant plugin install #{plugin_name}")
    plugin_status = true
    puts " #{plugin_name}  Dependencies installed"
  end
end

if plugin_status === true
  exec "vagrant #{ARGV.join' '}"
else
  puts "All Plugin Dependencies already installed"
end

require 'yaml'
vmconfig = YAML.load_file('vagrant.conf.yml')

Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/bionic64"
    config.hostmanager.enabled = true
    config.hostmanager.include_offline = true
    config.hostmanager.manage_host = true
    config.vm.provision :hostmanager
  
    config.vm.define "ace-box" do |c|
      c.vm.hostname = "ace-box"
      c.vm.network "private_network", ip: vmconfig["acebox"]["specs"]["priv_ip"]
      c.disksize.size = vmconfig["acebox"]["specs"]["disk"]

      # Copy user dir
      config.vm.provision "file", source: "../../user-skel", destination: "$HOME"
      config.vm.provision "file", source: "./ace-box.conf.yml", destination: "$HOME/ace-box.conf.yml"

      # Run init script
      config.vm.provision "shell", 
        inline: "chmod +x $HOME/init.sh",
        privileged: false
      config.vm.provision "shell", 
        inline: "$HOME/init.sh",
        privileged: false

      # Prepare ACE Box
      config.vm.provision "shell", 
        inline: "ace prepare --force",
        env: {
          "ACE_INGRESS_DOMAIN" => "#{vmconfig["acebox"]["specs"]["priv_ip"]}.nip.io", 
          "ACE_INGRESS_PROTOCOL" => "http",
          "ACE_ANSIBLE_WORKDIR" => "/home/vagrant/ansible/"
        },
        privileged: false

      # Install ACE Box
      config.vm.provision "shell", 
        inline: "ace install all",
        env: {
          "ACE_ANSIBLE_WORKDIR" => "/home/vagrant/ansible/"
        },
        privileged: false

      c.vm.provider "virtualbox" do |pr|
        pr.memory = vmconfig["acebox"]["specs"]["mem"]
        pr.cpus = vmconfig["acebox"]["specs"]["cpu"]
        pr.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      end

      c.vm.post_up_message = "Please open http://dashboard.#{vmconfig["acebox"]["specs"]["priv_ip"]}.nip.io and use links"
    end
  end 