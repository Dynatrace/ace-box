---
- include_role:
    name: dt-access-token
  vars:
    access_token_var_name: "{{ gitlab_dt_access_token_name }}"
    access_token_scope: ["slo.read","slo.write","CaptureRequestData","credentialVault.read","credentialVault.write","DataExport","DataPrivacy","ExternalSyntheticIntegration","ReadConfig","WriteConfig"]

- include_tasks: roles/gitlab/tasks/source-secret.yml

- include_tasks: roles/gitlab/tasks/ensure-group.yml

- block:
  - name: Source Keptn secrets
    include_role:
      name: keptn
      tasks_from: source-secret
  - include_role:
      name: keptn
      tasks_from: source-endpoints
  - set_fact:
      ca_endpoint: "{{ keptn_endpoint }}"
      ca_bridge: "{{ keptn_bridge }}"
      ca_api_token: "{{ keptn_api_token }}"
  when: cloud_automation_flavor is defined and cloud_automation_flavor == "KEPTN"

- block:
  - name: Source Cloud Automation secrets
    include_role:
      name: cloudautomation
      tasks_from: source-secret
  - set_fact:
      ca_endpoint: "{{ cloud_automation_endpoint }}"
      ca_bridge: "{{ cloud_automation_bridge }}"
      ca_api_token: "{{ cloud_automation_api_token }}"
  when: cloud_automation_flavor is defined and cloud_automation_flavor == "CLOUD_AUTOMATION"

- name: Source DT Synthetic node id
  include_role:
    name: dt-activegate-classic
    tasks_from: source-node-id

- name: Gitlab - Create variables
  include_role:
    name: gitlab
    tasks_from: ensure-group-var
  vars:
    gitlab_var_key: "{{ item.key }}"
    gitlab_var_value: "{{ item.value }}"
  loop:
    - { key: 'INGRESS_DOMAIN', value: '{{ ingress_domain }}' }
    - { key: 'INGRESS_PROTOCOL', value: '{{ ingress_protocol }}' }
    - { key: 'CLOUD_AUTOMATION_API_TOKEN', value: '{{ ca_api_token | default(None) }}' }
    - { key: 'CLOUD_AUTOMATION_ENDPOINT', value: '{{ ca_endpoint | default(None) | replace("/api","") }}' }
    - { key: 'DT_TENANT_URL', value: '{{ dynatrace_tenant_url }}' }
    - { key: 'DT_API_TOKEN', value: '{{ vars[gitlab_dt_access_token_name] }}' }
    - { key: 'SYNTH_NODE_ID', value: '{{ dt_synthetic_node_id | default(None) }}' }
    - { key: 'HOST_GROUP', value: '{{ host_group | default(None) }}' }
