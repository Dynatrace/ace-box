include:
  - remote: "https://gitlab.com/dynatrace-ace/dynatrace-gitlab-library/-/raw/master/dynatrace_event.yaml"

variables:
  BUILD_ID:
    value: "1"
    description: "Build ID. Please set to 1, 2, 3 or 4."
  RELEASE_VERSION: "v$BUILD_ID.0.3"
  RELEASE_BUILD_VERSION: "$BUILD_ID.0.3"
  RELEASE_PRODUCT: "simplenodeservice"
  RELEASE_STAGE: "simplenode-gitlab-staging"
  MANIFEST_FILE: ./monaco/manifest.yaml
  MONACO_VERSION: 2.2.0
  TEST_TIMEFRAME: "8m"

stages:
  - configure-dynatrace
  - deploy-staging
  - test
  - validate-release
  - deploy-production
  - cleanup

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"

.monaco_common:
  image: dynatrace/dynatrace-configuration-as-code:$MONACO_VERSION
  stage: configure-dynatrace
  rules:
    - if: $BUILD_ID == "1"


1-monaco-infra:
  extends:
    - .monaco_common
  script:
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project infrastructure --dry-run
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project infrastructure
    - sleep 30

2-monaco-staging:
  extends:
    - .monaco_common
  needs: ["1-monaco-infra"]
  variables:
    RELEASE_STAGE: "simplenode-gitlab-staging"
  script:
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project app.staging --dry-run
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project app.staging

3-monaco-srg:
  extends:
    - .monaco_common
  needs: ["2-monaco-staging"]
  variables:
    DT_OAUTH_CLIENT_ID: client.id
    DT_OAUTH_CLIENT_SECRET: client.secret
  script:
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project srg --dry-run
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project srg

4-monaco-prod:
  extends:
    - .monaco_common
  needs: ["2-monaco-staging"]
  variables:
    RELEASE_STAGE: "simplenode-gitlab-prod"
  script:
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project app.prod --dry-run
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco deploy $MANIFEST_FILE --project app.prod

5-monaco-sleep:
  extends:
    - .monaco_common
  needs: ["4-monaco-prod"]
  script:
    # Sleep an additional 120 seconds to give Dynatrace some time
    # to tag host according to current config before sending config events
    - sleep 120

6-monaco-staging-dt-event:
  extends:
    - .monaco_common
    - .dynatrace_event
  needs: ["5-monaco-sleep"]
  variables:
    DYNATRACE_ENV_URL: "$DT_TENANT_URL"
    DYNATRACE_API_TOKEN: "$DT_API_TOKEN"
    EVENT_TYPE: "CUSTOM_CONFIGURATION"
    ATTACH_RULES_FILE: "dynatrace/dynatrace.host-attachrules.yaml"
    DT_HOST_TAG: "simplenode-gitlab-staging"
    DESCRIPTION: "Monaco deployment successful: simplenode-gitlab-staging"
    CONFIGURATION: "simplenode-gitlab-staging"
    CUSTOM_PROPERTIES: '{"Approved by": "ACE"}'


6-monaco-prod-dt-event:
  extends:
    - .monaco_common
    - .dynatrace_event
  needs: ["5-monaco-sleep"]
  variables:
    DYNATRACE_ENV_URL: "$DT_TENANT_URL"
    DYNATRACE_API_TOKEN: "$DT_API_TOKEN"
    EVENT_TYPE: "CUSTOM_CONFIGURATION"
    ATTACH_RULES_FILE: "dynatrace/dynatrace.host-attachrules.yaml"
    DT_HOST_TAG: "simplenode-gitlab-prod"
    DESCRIPTION: "Monaco deployment successful: simplenode-gitlab-prod"
    CONFIGURATION: "simplenode-gitlab-prod"
    CUSTOM_PROPERTIES: '{"Approved by": "ACE"}'

deployment-staging:
  image: dtzar/helm-kubectl
  stage: deploy-staging
  script:
    - echo "BUILD_ID $BUILD_ID is being deployed"
    - >
      helm upgrade --install simplenode-gitlab-staging helm/simplenodeservice 
      --set image="dynatraceace/simplenodeservice:$RELEASE_BUILD_VERSION"
      --set domain="$INGRESS_DOMAIN" 
      --set version="$RELEASE_VERSION"
      --set build_version="$RELEASE_BUILD_VERSION" 
      --set environment="$RELEASE_STAGE" 
      --namespace "$RELEASE_STAGE" --create-namespace 
      --wait
    - sleep 150

dynatrace-deploy-event-staging:
  extends: .dynatrace_event
  stage: deploy-staging
  needs: ["deployment-staging"]
  variables:
    DYNATRACE_ENV_URL: "$DT_TENANT_URL"
    DYNATRACE_API_TOKEN: "$DT_API_TOKEN"
    DESCRIPTION: "$RELEASE_PRODUCT $RELEASE_VERSION deployed"
    CUSTOM_PROPERTIES: '{"namespace":"$RELEASE_STAGE"}'
    EVENT_TYPE: "CUSTOM_DEPLOYMENT"
    DEPLOYMENT_NAME: "simplenode_gitlab"
    DEPLOYMENT_VERSION: "$RELEASE_VERSION"
    REMEDIATION_ACTION: "Ansible Tower"
    DT_NAMESPACE: "$RELEASE_STAGE"

run-tests:
  before_script:
    - echo $(date -u +"%Y-%m-%dT%H:%M:%SZ") > srg.test.starttime
  after_script:
    - echo $(date -u +"%Y-%m-%dT%H:%M:%SZ") > srg.test.endtime
  stage: test
  needs: ["deployment-staging"]
  variables:
    LOCUST_LOCUSTFILE: locust/locustfile.py
    LOCUST_CONFIG: locust/locust.conf
    LOCUST_HOST: "http://simplenodeservice-$RELEASE_STAGE.$INGRESS_DOMAIN"
    LOCUST_LOAD_TEST_NAME: "Loadtest - $RELEASE_BUILD_VERSION"
  image: locustio/locust
  script:
    - echo "BUILD_ID $BUILD_ID is being tested"
    - locust --config $LOCUST_CONFIG --locustfile $LOCUST_LOCUSTFILE --host $LOCUST_HOST --run-time $TEST_TIMEFRAME
  artifacts:
    paths:
      - srg.test.starttime
      - srg.test.endtime

srg-release-validation:
  image: dynatraceace/dt-automation-cli:latest
  stage: validate-release
  needs: ["run-tests"]
  variables:
    #LOG_LEVEL: "verbose"
    APP_NAME: "simplenode-gitlab"
    DYNATRACE_URL_GEN3: $DT_PLATFORM_TENANT_URL
    ACCOUNT_URN: $DT_OAUTH_ACCOUNT_URN
    DYNATRACE_CLIENT_ID: $DT_OAUTH_CLIENT_ID
    DYNATRACE_SECRET: $DT_OAUTH_CLIENT_SECRET
    DYNATRACE_SSO_URL: $DT_OAUTH_SSO_ENDPOINT
    SRG_EVALUATION_STOP_ON_FAILURE: "false"
  script:
    - echo "BUILD_ID $BUILD_ID is being evaluated via Site Reliability Guardian"
    - eval_start=$(cat srg.test.starttime)
    - eval_end=$(cat srg.test.endtime)
    - export LOG_LEVEL=verbose
    - dta srg evaluate $APP_NAME --start-time=$eval_start --end-time=$eval_end --stop-on-failure


deployment-production:
  image: dtzar/helm-kubectl
  stage: deploy-production
  variables:
    RELEASE_STAGE: "simplenode-gitlab-prod"
  needs: ["srg-release-validation"]
  script:
    - echo "BUILD_ID $BUILD_ID is being deployed to production"
    - >
      helm upgrade --install simplenode-gitlab-production helm/simplenodeservice 
      --set image="dynatraceace/simplenodeservice:$RELEASE_BUILD_VERSION"
      --set domain="$INGRESS_DOMAIN" 
      --set version="$RELEASE_VERSION"
      --set build_version="$RELEASE_BUILD_VERSION" 
      --set environment="$RELEASE_STAGE" 
      --namespace "$RELEASE_STAGE" --create-namespace 
      --wait
    - sleep 150

dynatrace_deploy_event_production:
  extends: .dynatrace_event
  stage: deploy-production
  needs: ["deployment-production"]
  variables:
    RELEASE_STAGE: "simplenode-gitlab-prod"
    DYNATRACE_ENV_URL: "$DT_TENANT_URL"
    DYNATRACE_API_TOKEN: "$DT_API_TOKEN"
    DESCRIPTION: "$RELEASE_PRODUCT $RELEASE_VERSION deployed"
    CUSTOM_PROPERTIES: '{"namespace":"$RELEASE_STAGE"}'
    EVENT_TYPE: "CUSTOM_DEPLOYMENT"
    DEPLOYMENT_NAME: "simplenode_gitlab"
    DEPLOYMENT_VERSION: "$RELEASE_VERSION"
    REMEDIATION_ACTION: "Ansible Tower"
    DT_NAMESPACE: "$RELEASE_STAGE"


cleanup-monaco:
  image: dynatrace/dynatrace-configuration-as-code:$MONACO_VERSION
  stage: cleanup
  script:
    - MONACO_FEAT_AUTOMATION_RESOURCES=1 monaco delete --manifest $MANIFEST_FILE --file ./monaco/delete.yaml
  when: manual
