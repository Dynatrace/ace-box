"use strict";
/*! merge.js | @author brikcss <https://github.com/brikcss> | @reference https://github.com/brikcss/merge */function Merge(...e){let r={};if(2===e.length&&_isArray(e[0])&&_isObject(e[1])&&(r=e[1],e=e[0]),e.length<1)return!1;if(e.length<2)return e[0];let t=e.shift();return e.reduce((e,t)=>_trueType(e)===_trueType(t)&&_isIterable(e)&&_isIterable(t)?Merge[_isArray(t)?"arrays":"objects"](e,t,r):t,t)}function _joinPath(e,r){return e?[e,r].join("."):void 0===r?"":r}function _trueType(e){return Object.prototype.toString.call(e).slice(8,-1).toLowerCase()}function _isObject(e){return"object"===_trueType(e)}function _isArray(e){return"array"===_trueType(e)}function _exists(e){return null!=e}function _isIterable(e){return["array","object"].includes(_trueType(e))}Merge.arrays=(e=[],r,{arrayStrategy:t="unique",ignore:n=[],parent:i=""}={})=>_isArray(e)&&_isArray(r)?(r.forEach((r,a)=>{const s=_joinPath(i,a.toString());n&&n.includes(s)||("overwrite"===t?e[a]=r:"merge"===t?_isIterable(r)?e[a]=Merge[_trueType(r)+"s"](e[a],r,{arrayStrategy:t,ignore:n,parent:_joinPath(i,a)}):e[a]=r:"unique"===t?Object.is(e[a],r)||-1!==e.indexOf(r)||e.push(r):"concat"===t?e.push(r):e[a]=r)}),e):e,Merge.objects=(e={},r,{arrayStrategy:t,ignore:n=[],parent:i=""}={})=>(Object.keys(r).forEach((function(a){const s=r[a],o=_joinPath(i,a);n&&n.includes(o)||s!==e[a]&&_exists(s)&&(_isIterable(s)?_isArray(s)?(_isArray(e[a])||(e[a]="overwrite"===t?[]:_exists(e[a])?[e[a]]:[]),e[a]=Merge.arrays(e[a],s,{arrayStrategy:t,ignore:n,parent:o})):e[a]=Merge.objects(_isObject(e[a])?e[a]:{},s,{arrayStrategy:t,ignore:n,parent:o}):e[a]=s)})),e);var merge=Merge;module.exports=merge;
