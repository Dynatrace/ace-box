/*! merge.js | @author brikcss <https://github.com/brikcss> | @reference https://github.com/brikcss/merge */
function r(...t){let o={};if(2===t.length&&a(t[0])&&n(t[1])&&(o=t[1],t=t[0]),t.length<1)return!1;if(t.length<2)return t[0];let u=t.shift();return t.reduce((t,n)=>e(t)===e(n)&&i(t)&&i(n)?r[a(n)?"arrays":"objects"](t,n,o):n,u)}function t(r,t){return r?[r,t].join("."):void 0===t?"":t}function e(r){return Object.prototype.toString.call(r).slice(8,-1).toLowerCase()}function n(r){return"object"===e(r)}function a(r){return"array"===e(r)}function o(r){return null!=r}function i(r){return["array","object"].includes(e(r))}r.arrays=(n=[],o,{arrayStrategy:u="unique",ignore:c=[],parent:s=""}={})=>a(n)&&a(o)?(o.forEach((a,o)=>{const y=t(s,o.toString());c&&c.includes(y)||("overwrite"===u?n[o]=a:"merge"===u?i(a)?n[o]=r[e(a)+"s"](n[o],a,{arrayStrategy:u,ignore:c,parent:t(s,o)}):n[o]=a:"unique"===u?Object.is(n[o],a)||-1!==n.indexOf(a)||n.push(a):"concat"===u?n.push(a):n[o]=a)}),n):n,r.objects=(e={},u,{arrayStrategy:c,ignore:s=[],parent:y=""}={})=>(Object.keys(u).forEach((function(g){const f=u[g],l=t(y,g);s&&s.includes(l)||f!==e[g]&&o(f)&&(i(f)?a(f)?(a(e[g])||(e[g]="overwrite"===c?[]:o(e[g])?[e[g]]:[]),e[g]=r.arrays(e[g],f,{arrayStrategy:c,ignore:s,parent:l})):e[g]=r.objects(n(e[g])?e[g]:{},f,{arrayStrategy:c,ignore:s,parent:l}):e[g]=f)})),e);var u=r;export default u;
