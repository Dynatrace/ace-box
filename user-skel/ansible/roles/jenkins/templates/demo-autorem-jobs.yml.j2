        jobs:            
        - script: >
            folder('demo-auto-remediation')
        - script: >
            pipelineJob('demo-auto-remediation/1. Build images') {
              definition {
                cpsScm {
                  scriptPath('jenkins/canary/01_build_images.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo_autorem }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-auto-remediation/2. Monaco') {
              definition {
                cpsScm {
                  scriptPath('jenkins/canary/02_monaco.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo_autorem }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-auto-remediation/3. Deploy') {
              parameters {
                stringParam('IMAGE_NAME', 'ace/simplenodeservice', 'The image name of the service to deploy.')
                stringParam('IMAGE_TAG', '', 'The image tag of the service to deploy.')
                stringParam('CANARY_WEIGHT', '0', 'Weight of traffic that will be routed to service.')
                booleanParam('IS_CANARY', false, 'Is canary version of service?')
              }
              definition {
                cpsScm {
                  scriptPath('jenkins/canary/03_deploy.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo_autorem }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-auto-remediation/4. Generate Load') {
              definition {
                cpsScm {
                  scriptPath('jenkins/canary/04_generate_load.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo_autorem }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
        - script: >
            pipelineJob('demo-auto-remediation/5. Shift traffic') {
              parameters {
                stringParam('CANARY_WEIGHT', '0', 'Weight of traffic that will be routed to service.')
                stringParam('REMEDIATION_URL', '0', 'Remediation script to call if canary release fails.')
              }
              definition {
                cpsScm {
                  scriptPath('jenkins/canary/05_canary.Jenkinsfile')
                  scm {
                    git {
                        remote { 
                          url('{{ ingress_protocol }}://{{ git_domain }}/{{ git_org_demo_autorem }}/{{ git_repo_demo }}')
                          credentials('git-creds-ace')
                        }
                        branch('*/main')
                    }
                  }
                  lightweight()
                }
              }
            }
