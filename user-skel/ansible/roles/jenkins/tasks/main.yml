---
- include_role:
    name: dt-access-token
  vars:
    access_token_var_name: "{{ jenkins_dt_access_token_name }}"
    access_token_scope: ["slo.read","slo.write","CaptureRequestData","credentialVault.read","credentialVault.write","DataExport","DataPrivacy","ExternalSyntheticIntegration","ReadConfig","WriteConfig"]

- name: Create namespace
  kubernetes.core.k8s:
    name: "{{ jenkins_namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: Add chart repo
  kubernetes.core.helm_repository:
    name: jenkins
    repo_url: "https://charts.jenkins.io"

- include_tasks: roles/jenkins/tasks/create-secret.yml

- block:
  - name: Source Gitea secrets
    include_role:
      name: gitea
      tasks_from: source-secret
  - set_fact:
      git_username: "{{ gitea_username | default(None) }}"
      git_password: "{{ gitea_password | default(None) }}"
      git_access_token: "{{ gitea_access_token | default(None) }}"
      git_domain: "gitea.{{ ingress_domain | default(None) }}"
  when: git_flavor is defined and git_flavor == "GITEA"

- block:
  - name: Source Keptn secrets
    include_role:
      name: keptn
      tasks_from: source-secret
  - include_role:
      name: keptn
      tasks_from: source-endpoints
  - set_fact:
      ca_endpoint: "{{ keptn_endpoint | default(None) }}"
      ca_bridge: "{{ keptn_bridge | default(None) }}"
      ca_api_token: "{{ keptn_api_token | default(None) }}"
  when: cloud_automation_flavor is defined and cloud_automation_flavor == "KEPTN"

- block:
  - name: Source Cloud Automation secrets
    include_role:
      name: cloudautomation
      tasks_from: source-secret
  - set_fact:
      ca_endpoint: "{{ cloud_automation_endpoint | default(None) }}"
      ca_bridge: "{{ cloud_automation_bridge | default(None) }}"
      ca_api_token: "{{ cloud_automation_api_token | default(None) }}"
  when: cloud_automation_flavor is defined and cloud_automation_flavor == "CLOUD_AUTOMATION"

- block:
  - name: Source registry url
    kubernetes.core.k8s_info:
      kind: Service
      name: "registry"
      namespace: "container-registry"
    register: container_registry_svc_data
  - set_fact:
      docker_registry_url: "localhost:{{ container_registry_svc_data.resources[0].spec.ports[0].nodePort }}"

- name: Source DT Synthetic node id
  include_role:
    name: dt-activegate-classic
    tasks_from: source-node-id

- block:
  - name: Source OpenTelemetry Collector details
    include_role:
      name: otel-collector
      tasks_from: source-endpoints
  - set_fact:
      otel_endpoint: "{{ otel_internal_endpoint | default(None) }}"

- file:
    path: "{{ role_path }}/files/helm"
    state: directory

- name: Template default Helm values file
  template:
    src: jenkins-values.yml.j2
    dest: "{{ role_path }}/files/helm/jenkins-values.yml"
    owner: "{{ ace_box_user }}"
    group: "{{ ace_box_user }}"
    mode: '0644'

- name: Find all Jenkins Helm values files
  find:
    paths: "{{ role_path }}/files/helm"
  register: jenkins_helm_value_files

- name: Install
  kubernetes.core.helm:
    name: jenkins
    chart_ref: jenkins/jenkins
    chart_version: "{{ jenkins_helm_chart_version }}"
    release_namespace: "{{ jenkins_namespace }}"
    create_namespace: true
    wait: true
    wait_timeout: 30m
    values_files: "{{ jenkins_helm_value_files | json_query('files[*].path') }}"
  when: not jenkins_skip_install

- include_tasks: roles/jenkins/tasks/create-token.yml
  when: not jenkins_skip_install
