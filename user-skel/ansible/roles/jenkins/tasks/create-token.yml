---
- include_tasks:
    file: source-endpoints.yml

- name: Retrieve Jenkins Crumb
  uri:
    url: "{{ jenkins_internal_endpoint }}/crumbIssuer/api/json"
    user: "{{ jenkins_username }}"
    password: "{{ jenkins_password }}"
    force_basic_auth: yes
    validate_certs: false
    method: GET
    status_code: [200, 201, 204]
    return_content: yes
    headers:
      Content-Type: "application/json"
  register: jenkins_crumb_raw

- name: Query existing Jenkins API token
  uri:
    url: "{{ jenkins_internal_endpoint }}/user/{{ jenkins_username }}/configure"
    user: "{{ jenkins_username }}"
    password: "{{ jenkins_password }}"
    force_basic_auth: yes
    validate_certs: false
    method: GET
    status_code: [200, 201, 204]
    return_content: yes
    headers:
      Cookie: "{{ jenkins_crumb_raw.cookies_string }}"
      Jenkins-Crumb: "{{ jenkins_crumb_raw.json.crumb }}"
    body_format: form-urlencoded
    body:
      newTokenName: "admin-token"
  register: existing_jenkins_token_raw

- set_fact:
    jenkins_token_regex_match: "{{ existing_jenkins_token_raw.content | regex_search('admin-token') }}"

- debug:
    msg: "Jenkins token exists already! Skipping create..."
  when: jenkins_token_regex_match | length > 0

- block:
  - name: Generate Jenkins API token
    uri:
      url: "{{ jenkins_internal_endpoint }}/user/{{ jenkins_username }}/descriptorByName/jenkins.security.ApiTokenProperty/generateNewToken"
      user: "{{ jenkins_username }}"
      password: "{{ jenkins_password }}"
      force_basic_auth: yes
      validate_certs: false
      method: POST
      status_code: [200, 201, 204]
      return_content: yes
      headers:
        Cookie: "{{ jenkins_crumb_raw.cookies_string }}"
        Jenkins-Crumb: "{{ jenkins_crumb_raw.json.crumb }}"
      body_format: form-urlencoded
      body:
        newTokenName: "admin-token"
    register: jenkins_token_raw
  - debug:
      var: jenkins_token_raw.json.data.tokenValue
  when: jenkins_token_regex_match == ""

- name: Create Jenkins admin token secret
  kubernetes.core.k8s:
    name: jenkins-admin-token
    api_version: v1
    kind: Secret
    state: present
    namespace: "{{ jenkins_namespace }}"
    resource_definition:
      type: Opaque
      data:
        jenkins_token: "{{ jenkins_token_raw.json.data.tokenValue | b64encode }}"
  when: jenkins_token_raw is defined and jenkins_token_raw.json is defined
