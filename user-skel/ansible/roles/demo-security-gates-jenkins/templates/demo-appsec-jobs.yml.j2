controller:
  JCasC:
    configScripts:
      demo-appsec-jobs-config: |
        jobs:
          - script: >
              folder('{{ demo_jenkins_folder }}')
              description('Check out {{ ingress_protocol }}://{{ git_domain }}/{{ demo_org }}/{{ demo_repo }}/src/branch/main/demo/appsec for more information')
          - script: >
              multibranchPipelineJob('{{ demo_jenkins_folder }}/Detect SCM drift') {
                branchSources {
                  git {
                    id('E9F8F617-0F1E-4BA0-929C-77F36953361B')
                    remote('{{ ingress_protocol }}://{{ git_domain }}/{{ demo_org }}/{{ demo_repo }}')
                    credentialsId('git-creds-ace')
                    includes('main')
                  }
                }
                factory {
                  workflowBranchProjectFactory {
                    scriptPath('jenkins/appsec/triggerBuild.Jenkinsfile')
                  }
                }
              }
          - script: >
              pipelineJob('{{ demo_jenkins_folder }}/1. Build') {
                parameters {
                  choiceParam('BUILD', ['1','2','3','4','5'], 'Select the build you want to deploy (affects application behavior, github.com/grabnerandi/simplenodeservice for more details)')
                }
                definition {
                  cpsScm {
                    scriptPath('jenkins/appsec/build.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('{{ ingress_protocol }}://{{ git_domain }}/{{ demo_org }}/{{ demo_repo }}')
                            credentials('git-creds-ace')
                          }
                          branch('*/main')
                      }
                    }
                    lightweight()
                  }
                }
              }
          - script: >
              pipelineJob('{{ demo_jenkins_folder }}/2. Deploy') {
                parameters {
                  stringParam('APP_NAME', 'simplenodeservice', 'The name of the service to deploy.')
                  stringParam('TAG_STAGING', '', 'The image of the service to deploy.')
                  stringParam('BUILD', '', 'The version of the service to deploy.')
                  stringParam('ART_VERSION', '', 'The artefact version and hash to deploy.')
                }
                definition {
                  cpsScm {
                    scriptPath('jenkins/appsec/deployStaging.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('{{ ingress_protocol }}://{{ git_domain }}/{{ demo_org }}/{{ demo_repo }}')
                            credentials('git-creds-ace')
                          }
                          branch('*/main')
                      }
                    }
                    lightweight()
                  }
                }
              }
          - script: >
              pipelineJob('{{ demo_jenkins_folder }}/3. Test') {
                parameters {
                  stringParam('APP_NAME', 'simplenodeservice', 'The name of the service to deploy.')
                  stringParam('BUILD', '', 'The version of the service to deploy.')
                  stringParam('ART_VERSION', '', 'The artefact version and hash to deploy.')
                  choiceParam('QG_MODE', ['yaml','dashboard'], 'Use yaml or dashboard for QG')
                }
                definition {
                  cpsScm {
                    scriptPath('jenkins/appsec/test_appsec.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('{{ ingress_protocol }}://{{ git_domain }}/{{ demo_org }}/{{ demo_repo }}')
                            credentials('git-creds-ace')
                          }
                          branch('*/main')
                      }
                    }
                    lightweight()
                  }
                }
              }
          - script: >
              pipelineJob('{{ demo_jenkins_folder }}/4. Deploy production') {
                parameters {
                  stringParam('APP_NAME', 'simplenodeservice', 'The name of the service to deploy.')
                  stringParam('TAG_STAGING', '', 'The image of the service to deploy.')
                  stringParam('BUILD', '', 'The version of the service to deploy.')
                  stringParam('ART_VERSION', '', 'The artefact version and hash to deploy.')
                }
                definition {
                  cpsScm {
                    scriptPath('jenkins/appsec/deployProd.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('{{ ingress_protocol }}://{{ git_domain }}/{{ demo_org }}/{{ demo_repo }}')
                            credentials('git-creds-ace')
                          }
                          branch('*/main')
                      }
                    }
                    lightweight()
                  }
                }
              }
          - script: >
              pipelineJob('{{ demo_jenkins_folder }}/Monitoring as Code') {
                definition {
                  cpsScm {
                    scriptPath('jenkins/appsec/mac.Jenkinsfile')
                    scm {
                      git {
                          remote { 
                            url('{{ ingress_protocol }}://{{ git_domain }}/{{ demo_org }}/{{ demo_repo }}')
                            credentials('git-creds-ace')
                          }
                          branch('*/main')
                      }
                    }
                    lightweight()
                  }
                }
              }
