---
- include_role:
    name: gitea
    tasks_from: source-secret
  when: gitea_username is not defined or gitea_access_token is not defined or gitea_password is not defined

- set_fact:
    argocd_gitea_generator_api: "{{ ingress_protocol }}://gitea.{{ ingress_domain }}/"

- set_fact:
    argocd_gitea_generator_owner_url: "{{ ingress_protocol }}://gitea.{{ ingress_domain }}/{{ argocd_gitea_generator_owner }}"

- name: Persist Gitea PAT
  kubernetes.core.k8s:
    name: "gitea-creds"
    api_version: v1
    kind: Secret
    state: present
    namespace: "argocd"
    resource_definition:
      metadata:
        labels:
          app.kubernetes.io/name: gitea-token
          app.kubernetes.io/part-of: argocd
          argocd.argoproj.io/secret-type: repo-creds
      type: Opaque
      data:
        type: "{{ 'git' | b64encode }}"
        url: "{{ argocd_gitea_generator_owner_url | b64encode }}"
        username: "{{ gitea_username | b64encode }}"
        password: "{{ gitea_password | b64encode }}"
        token: "{{ gitea_access_token | b64encode }}"

- name: Ensure ApplicationSet
  kubernetes.core.k8s:
    state: present
    template: "{{ role_path }}/templates/argocd-gitea-application-set.yml.j2"
    namespace: "{{ argocd_namespace }}"
#
#
#
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: ApplicationSet
# metadata:
#   name: "gitea"
#   namespace: "argocd"
# spec:
#   generators:
#     - scmProvider:
#         requeueAfterSeconds: 60
#         cloneProtocol: https
#         gitea:
#           # The Gitea owner to scan.
#           owner: "{{ argocd_gitea_generator_owner }}"
#           # The Gitea instance url
#           api: "{{ argocd_gitea_generator_api }}"
#           # If true, scan every branch of every repository. If false, scan only the default branch. Defaults to false.
#           allBranches: true
#           # Reference to a Secret containing an access token. (optional)
#           tokenRef:
#             secretName: gitea-creds
#             key: token
#   template:
#     metadata:
#       name: "{{ repository }}"
#     spec:
#       source:
#         repoURL: "{{ url }}"
#         targetRevision: "HEAD"
#         path: "k8s/overlays/simplenodeservice"
#       project: default
#       destination:
#         server: https://kubernetes.default.svc
#         namespace: default
