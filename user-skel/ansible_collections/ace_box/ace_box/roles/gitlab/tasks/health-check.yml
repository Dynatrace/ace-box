- ansible.builtin.include_tasks: source-endpoints-external.yml

- name: Set GitLab URL
  set_fact:
    gitlab_url: "{{ gitlab_external_endpoint }}"

- name: Check GitLab availability with curl
  command: "curl -I -L {{ gitlab_url }}"
  register: curl_response
  failed_when: curl_response.rc != 0

- name: Check if GitLab is accessible
  debug:
    msg: "GitLab is accessible. Response: {{ curl_response.stdout }}"
  when: curl_response.rc == 0

- name: Fail if GitLab is not accessible
  fail:
    msg: "GitLab is not accessible. Response: {{ curl_response.stdout }}"
  when: curl_response.rc != 0

- name: Check SSL certificate validity
  shell: |
    echo | openssl s_client -connect {{ gitlab_url | regex_replace('^https?://', '') }}:443 -servername {{ gitlab_url | regex_replace('^https?://', '') }} 2>/dev/null | openssl x509 -noout -dates -subject -issuer -ext subjectAltName
  when: gitlab_url is search("https")
  register: ssl_check
  failed_when: ssl_check.rc != 0

- name: Debug SSL certificate validity
  debug:
    msg: "{{ ssl_check.stdout }}"
  when: gitlab_url is search("https")

- name: Extract certificate domains
  set_fact:
    cert_domains: "{{ ssl_check.stdout | regex_findall('DNS:([^,]+)') }}"
  when: gitlab_url is search("https")

- name: Check if certificate matches the domain name
  set_fact:
    domain_match: "{{ cert_domains | select('match', '^' + (gitlab_url | regex_replace('^https?://', '') | regex_replace('^.*?\\.', '*\\.')).replace('*', '.*') + '$') | list | length > 0 }}"
  when: gitlab_url is search("https")

- name: Debug certificate domains
  debug:
    msg: "Certificate domains: {{ cert_domains }}"
  when: gitlab_url is search("https")

# - name: Debug expected domain
#   debug:
#     msg: "Expected domain: {{ gitlab_url | regex_replace('^https?://', '') }}"

- name: Fail if SSL certificate does not match the domain name
  fail:
    msg: "SSL certificate does not match the domain name. Certificate domains: {{ cert_domains }}"
  when: gitlab_url is search("https") and not domain_match