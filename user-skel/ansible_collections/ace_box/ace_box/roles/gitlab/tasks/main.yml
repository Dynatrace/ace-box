# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Update git flavor
  include_role:
    name: config-v2
    tasks_from: set-var
  vars:
    var_key_to_set: "git_flavor"
    var_value_to_set: "GITLAB"
  when: git_flavor is not defined or git_flavor != "GITLAB"

- include_tasks: create-secret.yml

- name: Add chart repo
  kubernetes.core.helm_repository:
    name: gitlab
    repo_url: "https://charts.gitlab.io/"

- name: Install GitLab
  kubernetes.core.helm:
    name: gitlab
    chart_ref: gitlab/gitlab
    chart_version: "{{ gitlab_helm_chart_version }}"
    release_namespace: "{{ gitlab_namespace }}"
    create_namespace: true
    wait: true
    wait_timeout: 30m
    values:
      global:
        hosts:
          domain: "{{ ingress_domain }}"
          https: "{{ (ingress_protocol == 'https') | bool }}"
        appConfig:
          initialDefaults:
            signupEnabled: false
        ingress:
          configureCertmanager: false
          class: "{{ ingress_class }}"
          tls:
            enabled: false
          # annotations:
          #   # If GitLab is ran behind TLS-terminating load balancer, the following
          #   # headers need to be provided either as ingress annotations or the
          #   # external load balancer.
          #   nginx.ingress.kubernetes.io/configuration-snippet: |
          #     proxy_set_header x-forwarded-port 443;
          #     proxy_set_header x-forwarded-scheme https;
          #     proxy_set_header x-forwarded-proto https;
          #     proxy_set_header x-forwarded-ssl on;
        initialRootPassword:
          secret: "{{ gitlab_root_creds_secret_name }}"
          key: password
      certmanager:
        install: false
      gitlab-runner:
        gitlabUrl: "{{ ingress_protocol }}://gitlab.{{ ingress_domain }}"
        # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#docker-in-docker-with-tls-enabled-in-kubernetes
        runners:
          config: |
            [[runners]]
              pre_clone_script = 'cat /etc/resolv.conf | sed -r "s/^(search.*|options.*)/#\1/" > /tmp/resolv && cat /tmp/resolv > /etc/resolv.conf'
              [runners.kubernetes]
                image = "ubuntu:20.04"
                privileged = true
              [[runners.kubernetes.volumes.empty_dir]]
                name = "docker-certs"
                mount_path = "/certs/client"
                medium = "Memory"
      nginx-ingress:
        enabled: false
  register: gitlab_helm

- ansible.builtin.include_tasks: source-endpoints.yml

- name: Gitlab - Wait for API to be up
  uri:
    url: "{{ gitlab_internal_endpoint }}/api/v4/projects"
    validate_certs: no
    status_code: 200
  register: result
  until: result.status == 200
  retries: 300
  delay: 1
  when: gitlab_helm.changed

# First time sourcing PAT will issue and persist token
- ansible.builtin.include_tasks: source-personal-access-token.yml

- ansible.builtin.include_tasks: deploy-gcpe.yml
  when: "{{ gitlab_monitoring }} == true"
# Include Dashboard values
- set_fact:
    include_dashboard_value_file: "{{ role_path }}/templates/gitlab-dashboard.yml.j2"

- include_role:
    name: dashboard
    tasks_from: template-values-file

# Health validation for Gitlab
- include_tasks:
    file: health-check.yml
