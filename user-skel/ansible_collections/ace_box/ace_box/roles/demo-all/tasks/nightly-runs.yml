---
- name: Validate required extra_vars
  include_role:
    name: config-v2
    tasks_from: validate-extra-vars
  vars:
    required_extra_vars:
      - { key: "dt_oauth_sso_endpoint" }
      - { key: "dt_oauth_client_id", regex: 'dt0s02\..' }
      - { key: "dt_oauth_client_secret", regex: 'dt0s02\..' }
      - { key: "dt_oauth_account_urn", regex: "urn:dtaccount:." }
      - { key: "dt_environment_url_gen3" }

- set_fact:
    role_path_abs: "{{ role_path }}"

#
# Ensure apps
#
- include_role:
    name: dt-platform
    tasks_from: ensure-app
  vars:
    dt_app_id: "{{ item.dt_app_id }}"
    dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
    dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
    dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
    dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
    dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
  loop:
    - dt_app_id: "dynatrace.redhat.ansible"
      dt_app_version: "0.2.3"

- name: "Install {{ dt_app_id }}"
  include_role:
    name: "dt-platform"
    tasks_from: "install-app-artifact"
  vars:
    dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
    dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
    dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
    dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
    dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
    dt_app_id: "my.dynatrace.jenkins.tobias.gremmer"
    dt_app_artifact_path: "{{ role_path_abs }}/files/jenkins-app-0.0.1.zip"

- set_fact:
    dt_app_id_jenkins: "{{ dt_app_id }}"

- name: "Install {{ dt_app_id }}"
  include_role:
    name: "dt-platform"
    tasks_from: "install-app-artifact"
  vars:
    dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
    dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
    dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
    dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
    dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
    dt_app_id: "my.dynatrace.gitlab.tobias.gremmer"
    dt_app_artifact_path: "{{ role_path_abs }}/files/gitlab-app-0.0.5.zip"

- set_fact:
    dt_app_id_gitlab: "{{ dt_app_id }}"

- block:
    - include_role:
        name: dt-platform
        tasks_from: ensure-notebook
      vars:
        dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
        dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
        dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
        dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
        dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
        notebook_path: "{{ role_path_abs }}/files/validations/Validation_AR_Demo_Ansible.json"
        notebook_name: "Validation - AR Demo w Ansible"
    - name: Persist Notebook Id
      include_role:
        name: config-v2
        tasks_from: set-var
      vars:
        var_key_to_set: "notebook_id_Validation_AR_Demo_Ansible"
        var_value_to_set: "{{ notebook_post_result_json.id }}"
  when: notebook_id_Validation_AR_Demo_Ansible is not defined

- block:
    - include_role:
        name: dt-platform
        tasks_from: ensure-notebook
      vars:
        dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
        dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
        dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
        dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
        dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
        notebook_path: "{{ role_path_abs }}/files/validations/Validation_AR_Demo_GitLab.json"
        notebook_name: "Validation - AR Demo w GitLab"
    - name: Persist Notebook Id
      include_role:
        name: config-v2
        tasks_from: set-var
      vars:
        var_key_to_set: "notebook_id_Validation_AR_Demo_GitLab"
        var_value_to_set: "{{ notebook_post_result_json.id }}"
  when: notebook_id_Validation_AR_Demo_GitLab is not defined

- block:
    - include_role:
        name: dt-platform
        tasks_from: ensure-notebook
      vars:
        dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
        dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
        dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
        dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
        dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
        notebook_path: "{{ role_path_abs }}/files/validations/Validation_SRG_Demo_FAIL.json"
        notebook_name: "Validation - SRG Demo FAIL"
    - name: Persist Notebook Id
      include_role:
        name: config-v2
        tasks_from: set-var
      vars:
        var_key_to_set: "notebook_id_Validation_SRG_Demo_FAIL"
        var_value_to_set: "{{ notebook_post_result_json.id }}"
  when: notebook_id_Validation_SRG_Demo_FAIL is not defined

- block:
    - include_role:
        name: dt-platform
        tasks_from: ensure-notebook
      vars:
        dt_oauth_sso_endpoint: "{{ extra_vars.dt_oauth_sso_endpoint }}"
        dt_oauth_client_id: "{{ extra_vars.dt_oauth_client_id }}"
        dt_oauth_client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
        dt_oauth_account_urn: "{{ extra_vars.dt_oauth_account_urn }}"
        dt_environment_url_gen3: "{{ extra_vars.dt_environment_url_gen3 }}"
        notebook_path: "{{ role_path_abs }}/files/validations/Validation_SRG_Demo_PASS.json"
        notebook_name: "Validation - SRG Demo PASS"
    - name: Persist Notebook Id
      include_role:
        name: config-v2
        tasks_from: set-var
      vars:
        var_key_to_set: "notebook_id_Validation_SRG_Demo_PASS"
        var_value_to_set: "{{ notebook_post_result_json.id }}"
  when: notebook_id_Validation_SRG_Demo_PASS is not defined

#
# Monaco
#
- include_role:
    name: monaco-v2

- name: Monaco - Deploy configuration
  include_role:
    name: monaco-v2
    tasks_from: apply-monaco
  vars:
    monaco_manifest_path: "{{ role_path_abs }}/files/monaco/manifest.yml"
    monaco_environment:
      DT_PLATFORM_TENANT_URL: "{{ extra_vars.dt_environment_url_gen3 }}"
      DT_OAUTH_CLIENT_ID: "{{ extra_vars.dt_oauth_client_id }}"
      DT_OAUTH_CLIENT_SECRET: "{{ extra_vars.dt_oauth_client_secret }}"
      DT_OAUTH_SSO_ENDPOINT: "{{ extra_vars.dt_oauth_sso_endpoint }}"
      AWX_CONTROLLER_TOKEN: "{{ awx_controller_token }}"
      AWX_URL: "{{ ingress_protocol }}://ansible.{{ ingress_domain }}/api/v2/"
      AWX_CANARY_TEMPLATE_ID: "{{ demo_ar_workflows_ansible_template_id }}"
      GITLAB_URL: "{{ ingress_protocol }}://gitlab.{{ ingress_domain }}/"
      GITLAB_TOKEN: "{{ gitlab_personal_access_token }}"
      GITLAB_AR_PROJECT_ID: "{{ demo_ar_workflows_gitlab_project_id }}"
      GITLAB_SRG_PROJECT_ID: "{{ demo_srg_gitlab_project_id }}"
      JENKINS_URL: "{{ ingress_protocol }}://jenkins.{{ ingress_domain }}/"
      JENKINS_USER: "{{ jenkins_username }}"
      JENKINS_TOKEN: "{{ jenkins_api_token }}"
      # WORKFLOW_ACTOR_ID: "{{ extra_vars.workflow_actor_id }}"
