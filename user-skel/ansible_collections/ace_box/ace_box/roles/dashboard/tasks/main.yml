# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Create BasicAuth for NGINX Ingress
  block:
  - set_fact:
      password_encrypted: "{{ dashboard_password | password_hash('md5') }}"
  - set_fact:
      authb64encoded: "{{ [dashboard_user, password_encrypted] | join(':') | b64encode }}"
  when: ingress_class != "istio"

- name: Create BasicAuth for Istio Ingress
  block:
  - set_fact:
      authb64encoded: "{{ [dashboard_user, dashboard_password] | join(':') | b64encode }}"
  when: ingress_class == "istio"

# Include Dashboard default values
- set_fact:
    include_dashboard_value_file: "{{ role_path }}/templates/default-ext-refs.yml.j2"

- include_tasks: template-values-file.yml

- name: Find all Dashboard Helm values files
  find:
    paths: "{{ role_path }}/files/helm-values"
  register: dashboard_helm_value_files

- name: Create ace namespace
  kubernetes.core.k8s:
    name: ace
    api_version: v1
    kind: Namespace
    state: present

- name: Add label to ace namespace
  kubernetes.core.k8s:
    state: patched
    kind: Namespace
    name: ace
    definition:
      metadata:
        labels:
          monitor: exclude

- name: Install
  kubernetes.core.helm:
    name: ace-dashboard
    chart_ref: "{{ role_path }}/files/chart"
    release_namespace: "{{ dashboard_namespace }}"
    wait: true
    wait_timeout: 15m
    values:
      domain: "{{ ingress_domain }}"
      authb64encoded: "{{ authb64encoded }}"
      image: "{{ dashboard_image }}"
      ingress:
        enabled: "{{ ingress_class != 'istio' }}"
        class: "{{ ingress_class }}"
      virtualservice:
        enabled: "{{ ingress_class == 'istio' }}"
    values_files: "{{ dashboard_helm_value_files | json_query('files[*].path') }}"
  when: not dashboard_skip_install

- name: Print some dashboard config
  debug:
    msg:
      - "Dashboard URL: {{ ingress_protocol }}://dashboard.{{ ingress_domain }}"
      - "Dashboard username: {{ dashboard_user }}"
      - "Dashboard password: {{ dashboard_password }}"
