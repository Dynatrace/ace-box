# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: unguard-proxy-service
  labels:
    app.kubernetes.io/name: proxy-service
    app.kubernetes.io/part-of: unguard
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: proxy-service
    app.kubernetes.io/part-of: unguard
  ports:
    - targetPort: 8081
      port: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: unguard-proxy
  labels:
    app.kubernetes.io/name: proxy-service
    app.kubernetes.io/part-of: unguard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: proxy-role
  labels:
    app.kubernetes.io/name: proxy-service
    app.kubernetes.io/part-of: unguard
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["create", "list", "get"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: proxy-rolebinding
  labels:
    app.kubernetes.io/name: proxy-service
    app.kubernetes.io/part-of: unguard
subjects:
  - kind: ServiceAccount
    name: unguard-proxy
    apiGroup: ""
roleRef:
  kind: Role
  name: proxy-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unguard-proxy-service
  labels:
    app.kubernetes.io/name: proxy-service
    app.kubernetes.io/part-of: unguard
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: proxy-service
      app.kubernetes.io/part-of: unguard
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: proxy-service
        app.kubernetes.io/part-of: unguard
    spec:
      serviceAccountName: unguard-proxy
      containers:
        - name: proxy-service
          image: unguard-proxy-service
          ports:
            - containerPort: 8081
          env:
            - name: OPENTRACING_JAEGER_ENABLED
              value: "false"
            - name: SERVER_PORT
              value: "8081"
            - name: JAEGER_SERVICE_NAME
              value: "unguard-proxy-service"
            - name: JAEGER_AGENT_HOST
              value: "jaeger-agent" # change depending on your jaeger deployment
            - name: JAEGER_SAMPLER_TYPE
              value: "const"
            - name: JAEGER_SAMPLER_PARAM
              value: "0"
