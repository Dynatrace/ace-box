# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: unguard-user-simulator
  labels:
    app.kubernetes.io/name: user-simulator
    app.kubernetes.io/part-of: unguard
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: user-simulator
      app.kubernetes.io/part-of: unguard
  replicas: 3
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user-simulator
        app.kubernetes.io/part-of: unguard
    spec:
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
        - name: main
          image: unguard-user-simulator
          env:
            - name: FRONTEND_ADDR
              value: "unguard-envoy-proxy:8080/ui"
          resources:
            requests:
              cpu: 10m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
      initContainers:
        - name: wait-for-frontend
          image: curlimages/curl
          command: [ "/bin/sh", "-c" ]
          # CASP-8983 replace this endpoint with a proper health check endpoint
          args: [ 'while [ $(curl -ksw "%{http_code}" "http://unguard-envoy-proxy:8081/healthz?path=unguard-frontend" -o /dev/null) -ne 200 ]; do sleep 5; echo "health check failed . Waiting for the service..."; done' ]
