name: Validate PRs with demo use cases

on:
  pull_request:
    branches:
      - dev
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      use_cases:
        description: 'Enter the use cases to run (comma-separated). Example: ["demo_ar_workflows_gitlab","demo_ar_workflows_ansible"]'
        required: true
        default: '["demo_all"]'
        type: string
      
      providers:
        description: 'Select the providers to run (comma-separated). Example: ["gcloud","aws"]'
        required: true
        default: '["gcloud"]'
        type: string

      destroy_resources:
        description: 'Set to "true" to enable resource destruction'
        required: true
        default: true
        type: boolean

      custom_domain:
        description: "Custom Domain Name"
        required: false
        default: ""
        type: string

      # optional params for manual run
      dt_tenant:
        description: "Dynatrace Tenant"
        required: false
        default: ""
        type: string
      dt_api_token:
        description: "Dynatrace API Token"
        required: false
        default: ""
        type: string
      dt_url_gen3:
        description: "Dynatrace Environment URL Gen3"
        required: false
        default: ""
        type: string

env:
  DEFAULT_USE_CASES: '["demo_all"]'
  DEFAULT_PROVIDERS: '["gcloud"]'
  DESTROY_RESOURCES: true
  DEFAULT_CUSTOM_DOMAIN: "demo-sprint-2.ace-innovation.info"
  DT_TENANT: ${{ vars.DT_TENANT }}
  DT_URL_GEN3: ${{ vars.DT_URL_GEN3 }}
  DT_API_TOKEN: ${{ secrets.DT_API_TOKEN }}

jobs:

  set_env_vars:
    runs-on: spot
    outputs:
      use_cases: ${{ steps.set_env.outputs.use_cases }}
      providers: ${{ steps.set_env.outputs.providers }}
      destroy_resources: ${{ steps.set_env.outputs.destroy_resources }}
      custom_domain: ${{ steps.set_env.outputs.custom_domain }}
      dt_tenant: ${{ steps.set_env.outputs.dt_tenant }}
      dt_url_gen3: ${{ steps.set_env.outputs.dt_url_gen3 }}
      dt_api_token: ${{ steps.set_env.outputs.dt_api_token }}
    steps:
      - name: Set Environment Variables
        id: set_env
        env:
          USE_CASES: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.use_cases || env.DEFAULT_USE_CASES }}
          PROVIDERS: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.providers || env.DEFAULT_PROVIDERS }}
          DESTROY_RESOURCES: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.destroy_resources || env.DEFAULT_DESTROY_RESOURCES }}
          CUSTOM_DOMAIN: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.custom_domain || env.DEFAULT_CUSTOM_DOMAIN }}
          DT_TENANT: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.dt_tenant != '' && github.event.inputs.dt_tenant || env.DT_TENANT) || env.DT_TENANT }}
          DT_URL_GEN3: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.dt_url_gen3 != '' && github.event.inputs.dt_url_gen3 || env.DT_URL_GEN3) || env.DT_URL_GEN3 }}
          DT_API_TOKEN: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.dt_api_token != '' && github.event.inputs.dt_api_token || env.DT_API_TOKEN) || env.DT_API_TOKEN }}
        run: |
          echo "USE_CASES=${USE_CASES}"
          echo "PROVIDERS=${PROVIDERS}"
          echo "DESTROY_RESOURCES=${DESTROY_RESOURCES}"
          echo "CUSTOM_DOMAIN=${CUSTOM_DOMAIN}"
          echo "DT_TENANT=${DT_TENANT}"
          echo "DT_URL_GEN3=${DT_URL_GEN3}"
          echo "DT_API_TOKEN=${DT_API_TOKEN}"


  test_demo_usecases:
    needs: set_env_vars
    uses: ./.github/workflows/validation.yaml
    with:
      use_cases: ${{ needs.set_env_vars.outputs.use_cases }}
      providers: ${{ needs.set_env_vars.outputs.providers }}
      destroy_resources: ${{ needs.set_env_vars.outputs.destroy_resources == 'true' }}
      custom_domain: ${{ needs.set_env_vars.outputs.custom_domain }}
      dt_tenant: ${{ needs.set_env_vars.outputs.dt_tenant }}
      dt_url_gen3: ${{ needs.set_env_vars.outputs.dt_url_gen3 }}
      dt_oauth_sso_endpoint: ${{ vars.DT_OAUTH_SSO_ENDPOINT }}
      dt_oauth_account_urn: ${{ vars.DT_OAUTH_ACCOUNT_URN }}
    secrets:
      dt_api_token: ${{ needs.set_env_vars.outputs.dt_api_token }}
      gcp_credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}
      dt_oauth_client_id: ${{ secrets.DT_OAUTH_CLIENT_ID }}
      dt_oauth_client_secret: ${{ secrets.DT_OAUTH_CLIENT_SECRET }}
