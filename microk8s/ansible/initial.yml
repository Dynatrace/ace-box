---
- hosts: all
  become: true
  vars_files:
  - ../config.yml
  roles:
  - role: Dynatrace.OneAgent
  vars:
    dynatrace_environment_url:  "{{ dynatrace['tenant'] }}"
    dynatrace_paas_token:       "{{ dynatrace['paastoken'] }}"
  tasks:
  - name: Install snapd and disk utils
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - snapd
      - cloud-utils
      - parted

  - name: Disable swap and resize disk
    become: true
    shell: "swapoff -a && sed -i '/swap/d' /etc/fstab && parted /dev/sda rm 2 && growpart /dev/sda 1 && resize2fs /dev/sda1"
    args:
      removes: /dev/sda2

  - name: Install snap core
    become: true
    command: snap install core

  - name: Install microk8s
    become: true
    command: snap install microk8s --classic --channel=1.13/stable

  - name: Alias to kubectl
    shell: snap alias microk8s.kubectl kubectl

  - name: Start k8s
    shell: /snap/bin/microk8s.start

  - name: And wait this
    shell: /snap/bin/microk8s.status --wait-ready

  - name: Enable dashboard, dns, storage and registry
    shell: /snap/bin/microk8s.enable dns dashboard storage registry

  - name: Add namespaces services, staging and prod
    shell: /snap/bin/microk8s.kubectl create -f /vagrant/k8s/namespaces.yml
    ignore_errors: yes

  - name: Create directory for helm
    file:
      path: /home/vagrant/.kube
      state: directory

  - name: Config for helm
    shell: "/snap/bin/microk8s.kubectl config view --raw > /home/vagrant/.kube/config"

  - name: Download helm
    command: wget -O helm.tar.gz https://get.helm.sh/helm-v2.14.0-linux-amd64.tar.gz
    args:
      creates: helm.tar.gz

  - name: Extract
    command: tar zxvf helm.tar.gz
    args:
      creates: linux-amd64/helm

  - name: Install helm
    become: true
    command: cp linux-amd64/helm /usr/local/bin/helm
    args:
      creates: /usr/local/bin/helm

  - name: Install tiller
    become: true
    command: cp linux-amd64/tiller /usr/local/bin/tiller
    args:
      creates: /usr/local/bin/tiller

  - name: Init helm
    become_user: vagrant
    shell: helm init --wait

  - name: Helm - enable Incubator Repo
    become_user: vagrant
    shell: helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/
    
  - name: Create persistent volume for jenkins
    shell: /snap/bin/microk8s.kubectl create -f /vagrant/k8s/jenkins-pvc.yml
    ignore_errors: yes

  - name: Chmod 777 to docker socker
    become: true
    file:
      path: /var/snap/microk8s/current/docker.sock
      mode: '0777'

  - name: Allow jenkins to admin k8s
    shell: /snap/bin/microk8s.kubectl create clusterrolebinding jenkins --clusterrole cluster-admin --serviceaccount=jenkins:services
    ignore_errors: yes

  - name: Prepull jenkins image
    become_user: vagrant
    shell: /snap/bin/microk8s.docker pull jenkins/jenkins:lts

  - name: Install jenkins
    become_user: vagrant
    shell: helm upgrade -i -f /vagrant/k8s/jenkins-values.yml --namespace services jenkins stable/jenkins
    ignore_errors: yes

  - name: Install Gogs local Git Server
    become_user: vagrant
    shell: helm upgrade -i -f /vagrant/k8s/gogs-values.yml --namespace services gogs incubator/gogs
    ignore_errors: yes

  - name: Build simple dashboard
    become_user: vagrant
    shell: /snap/bin/microk8s.docker build -t 127.0.0.1:32000/dashboard /vagrant/docker/dashboard && /snap/bin/microk8s.docker push 127.0.0.1:32000/dashboard

  - name: Run simple dashboard
    become_user: vagrant
    shell: helm upgrade -i simple-dashboard /vagrant/helm-charts/dashboard --namespace services
    ignore_errors: yes    

  - name: iptables - Allow forwarding
    become: true
    shell: iptables -P FORWARD ACCEPT
