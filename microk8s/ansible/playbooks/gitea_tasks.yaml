
- name: Gitea - Add helm repo
  become_user: "{{ non_root_user }}"
  shell: /snap/bin/helm repo add k8s-land https://charts.k8s.land
  tags:
    - git

- set_fact:
    gitea_domain: "gitea.{{ ingress_domain }}"
  when: 
  tags:
    - git

- debug: var=gitea_domain
  tags:
    - git

- debug: var=gitea_version
  tags:
    - git

- name: Gitea - Set placeholders
  shell: >
    sed 
    -e "s|GITEA_INGRESS_PLACEHOLDER|{{ gitea_domain }}|"  
    -e "s|GITEA_VERSION_PLACEHOLDER|{{ gitea_version }}|g"  
    /vagrant/k8s/gitea-values.yml > /vagrant/k8s/gitea-values-gen.yml
  tags:
    - git

- name: Gitea - Install gitea using helm
  become_user: "{{ non_root_user }}"
  shell: /snap/bin/helm install gitea k8s-land/gitea -f /vagrant/k8s/gitea-values-gen.yml --namespace ace
  ignore_errors: yes
  tags:
    - git

- name: Gitea - Wait for gitea to be ready
  shell: /snap/bin/microk8s.kubectl -n ace rollout status deployment gitea-gitea
  tags:
    - git

- name: "Gitea - Create default user {{ git_user }}"
  shell: /snap/bin/microk8s.kubectl exec -t $(kubectl -n ace get po -l app=gitea-gitea -o jsonpath='{.items[0].metadata.name}') -n ace -- bash -c 'su - git -c "/usr/local/bin/gitea --custom-path /data/gitea --config /data/gitea/conf/app.ini  admin create-user --username {{ git_user }} --password {{ git_password }} --email {{ git_email }} --admin --access-token"'
  register: token_raw
  tags:
    - git

- set_fact:
    gitea_access_token: "{{  token_raw.stdout | regex_search('Access token was successfully created... (.*)') | regex_replace ('Access token was successfully created... ', '') }}"
  tags:
    - git

- debug: var=gitea_access_token
  tags:
    - git

- name: Gitea - Create Gitea secret
  shell: /snap/bin/microk8s.kubectl -n ace create secret generic gitea --from-literal=gitea_domain={{ gitea_domain }} --from-literal=git_user={{ git_user }} --from-literal=access_token={{ gitea_access_token }}
  tags:
    - git

- name: Gitea - Delete Gitea secret
  shell: /snap/bin/microk8s.kubectl -n ace delete secret gitea
  ignore_errors: yes
  tags:
    - never
    - git_uninstall

# The wait is needed as sometimes the API is not up even though Gitea deployment is ready
- name: Gitea - Wait for API to be up
  uri:
    url: "{{ custom_domain_protocol }}://{{ gitea_domain }}/api/v1/admin/orgs?access_token={{ gitea_access_token }}"
    status_code: 200
    validate_certs: no
  register: result
  until: result.status == 200
  retries: 120
  delay: 1
  tags:
    - git
  
- name: "Gitea - Git config"
  shell: "git config --global user.email \"{{ git_email }}\" && git config --global user.name \"{{ git_user }}\" && git config --global http.sslverify false"
  tags:
    - git

- name: "Gitea - Git config"
  become_user: "{{ non_root_user }}"
  shell: "git config --global user.email \"{{ git_email }}\" && git config --global user.name \"{{ git_user }}\" && git config --global http.sslverify false"
  tags:
    - git

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "ace"
    gitea_repo: "{{ git_repo }}"
    gitea_source_folder: "hot-repo"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "ace"
    gitea_repo: "docs"
    gitea_source_folder: "docs"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "ace"
    gitea_repo: "monaco"
    gitea_source_folder: "monaco"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "monaco-hot"
    gitea_repo: "monaco-hot"
    gitea_source_folder: "monaco-hot"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "carts"
    gitea_source_folder: "quality-gates-hot/carts"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "k8s-deploy-staging"
    gitea_source_folder: "quality-gates-hot/k8s-deploy-staging"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "jenkins-release-branch"
    gitea_source_folder: "quality-gates-hot/jenkins-release-branch"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "lab-guides"
    gitea_source_folder: "quality-gates-hot/lab-guides"
  tags:
    - git
    - git_uninstall

- name: Gitea - Uninstall Gitea
  become_user: "{{ non_root_user }}"
  shell: /snap/bin/helm uninstall --namespace ace gitea
  ignore_errors: yes
  tags:
    - never
    - git_uninstall

- name: Gitea - Uninstall Gitea PVCs
  shell: /snap/bin/microk8s.kubectl -n ace delete pvc gitea-gitea data-gitea-mariadb-0
  ignore_errors: yes
  tags:
    - never
    - git_uninstall

