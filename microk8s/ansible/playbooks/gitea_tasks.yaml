- name: Gitea - Add helm repo
  become_user: "{{ non_root_user }}"
  shell: /snap/bin/helm repo add gitea-charts https://dl.gitea.io/charts/
  tags:
    - git

- name: Gitea - Update repos
  become_user: "{{ non_root_user }}"
  shell: /snap/bin/helm repo update
  tags:
    - git

- set_fact:
    gitea_domain: "gitea.{{ ingress_domain }}"
  when: 
  tags:
    - git

- debug: var=gitea_domain
  tags:
    - git

- debug: var=gitea_version
  tags:
    - git

- name: Gitea - Template Helm values file
  ansible.builtin.template:
    src: /vagrant/k8s/gitea-values.yml.j2
    dest: /vagrant/k8s/gitea-values.yml
    owner: root
    group: root
    mode: '0644'
  tags:
    - git

- name: Gitea - Install gitea using helm
  become_user: "{{ non_root_user }}"
  shell: /snap/bin/helm install gitea gitea-charts/gitea -f /vagrant/k8s/gitea-values.yml --namespace ace
  ignore_errors: yes
  tags:
    - git

- name: Gitea - Wait for gitea to be ready
  shell: /snap/bin/microk8s.kubectl -n ace rollout status deployment gitea-memcached
  tags:
    - git

# The wait is needed as sometimes the API is not up even though Gitea deployment is ready
- name: Gitea - Wait for API to be up
  uri:
    url: "{{ custom_domain_protocol }}://{{ gitea_domain }}/api/v1/version"
    user: "{{ git_user }}"
    password: "{{ git_password }}"
    force_basic_auth: yes
    validate_certs: no
    status_code: 200
  register: result
  until: result.status == 200
  retries: 120
  delay: 1
  tags:
    - git

- name: Gitea - Create admin user access token
  uri:
    url: "{{ custom_domain_protocol }}://{{ gitea_domain }}/api/v1/users/{{ git_user }}/tokens"
    user: "{{ git_user }}"
    password: "{{ git_password }}"
    method: POST
    body_format: form-urlencoded
    body:
      name: "{{ git_user }}"
    force_basic_auth: yes
    validate_certs: no
    status_code: 201
  register: post_token_result
  no_log: true
  tags:
    - git

- set_fact:
    gitea_access_token: "{{  post_token_result.json.sha1 }}"
  tags:
    - git

- name: Gitea - Create Gitea secret
  shell: >
    /snap/bin/microk8s.kubectl -n ace create secret generic gitea-admin
    --from-literal=gitea_domain={{ gitea_domain }} 
    --from-literal=git_user={{ git_user }} 
    --from-literal=git_password={{ git_password }}
    --from-literal=access_token={{ gitea_access_token }}
  tags:
    - git

- name: Gitea - Delete Gitea secret
  shell: /snap/bin/microk8s.kubectl -n ace delete secret gitea-admin
  ignore_errors: yes
  tags:
    - never
    - git_uninstall
  
- name: "Gitea - Git config"
  shell: "git config --global user.email \"{{ git_email }}\" && git config --global user.name \"{{ git_user }}\" && git config --global http.sslverify false"
  tags:
    - git

- name: "Gitea - Git config"
  become_user: "{{ non_root_user }}"
  shell: "git config --global user.email \"{{ git_email }}\" && git config --global user.name \"{{ git_user }}\" && git config --global http.sslverify false"
  tags:
    - git

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "ace"
    gitea_repo: "{{ git_repo }}"
    gitea_source_folder: "hot-repo"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "ace"
    gitea_repo: "docs"
    gitea_source_folder: "docs"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "ace"
    gitea_repo: "monaco"
    gitea_source_folder: "monaco"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "monaco-hot"
    gitea_repo: "monaco-hot"
    gitea_source_folder: "monaco-hot"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "carts"
    gitea_source_folder: "quality-gates-hot/carts"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "k8s-deploy-staging"
    gitea_source_folder: "quality-gates-hot/k8s-deploy-staging"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "jenkins-release-branch"
    gitea_source_folder: "quality-gates-hot/jenkins-release-branch"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "quality-gates-hot"
    gitea_repo: "lab-guides"
    gitea_source_folder: "quality-gates-hot/lab-guides"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "auto-remediation"
    gitea_repo: "ace-demo-canary"
    gitea_source_folder: "auto-remediation/ace-demo-canary"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "auto-remediation"
    gitea_repo: "ace-demo-canary-awx"
    gitea_source_folder: "auto-remediation/ace-demo-canary-awx"
  tags:
    - git
    - git_uninstall

- name: Gitea - Configure repo
  include_tasks: gitea_repo_tasks.yaml
  vars:
    gitea_org: "auto-remediation"
    gitea_repo: "ace-demo-canary-docs"
    gitea_source_folder: "auto-remediation/ace-demo-canary-docs"
  tags:
    - git
    - git_uninstall

- name: Gitea - Uninstall Gitea
  become_user: "{{ non_root_user }}"
  shell: /snap/bin/helm uninstall --namespace ace gitea
  ignore_errors: yes
  tags:
    - never
    - git_uninstall

- name: Gitea - Uninstall Gitea PVCs
  shell: /snap/bin/microk8s.kubectl -n ace delete pvc data-gitea-0 data-gitea-postgresql-0
  ignore_errors: yes
  tags:
    - never
    - git_uninstall

