- name: Keptn - Prereqs - microk8s.config
  shell: /snap/bin/microk8s.config > kubeconfig

- name: Keptn - Prereqs - set KUBECONFIG
  become_user: "{{ non_root_user }}"
  shell: export KUBECONFIG=./kubeconfig

- name: Keptn - Download Keptn CLI
  unarchive:
    src: "https://github.com/keptn/keptn/releases/download/{{ keptn_version }}/keptn-{{ keptn_version }}-linux-amd64.tar.gz"
    dest: /usr/local/bin
    remote_src: yes
    mode: +x

- name: Keptn - Rename CLI
  become: true
  shell: "cp /usr/local/bin/keptn-{{ keptn_version }}-linux-amd64 /usr/local/bin/keptn"

- name: Keptn - Install Keptn Quality Gates using helm
  become_user: "{{ non_root_user }}"
  shell: helm upgrade keptn keptn --install --wait --timeout 10m --version={{ keptn_version }} --create-namespace --namespace=keptn --repo="https://storage.googleapis.com/keptn-installer"

#- name: Keptn - Install Keptn Quality Gates
  ##become_user: vagrant
#  shell: /usr/local/bin/keptn install --platform=kubernetes --use-case=quality-gates --creds=/vagrant/k8s/keptncreds.json 

- name: Keptn - Set placeholders
  shell: >
    sed 
    -e "s|INGRESS_PLACEHOLDER|{{ ingress_domain }}|"   
    /vagrant/k8s/keptn-ingress.yml > /vagrant/k8s/keptn-ingress-gen.yml

- name: Keptn - Apply ingress
  shell: "/snap/bin/microk8s.kubectl apply -f /vagrant/k8s/keptn-ingress-gen.yml"

#- name: Keptn - Expose Bridge
#  shell: /usr/local/bin/keptn configure bridge --action=expose

#- name: Keptn - Authenticate vagrant user with Keptn
#  shell: cp -r /root/.keptn/ /home/vagrant && chown -R vagrant /home/vagrant/.keptn

- set_fact:
    dynatrace_tenant_nohttps: "{{ dynatrace_tenant_url | regex_replace('https://', '') }}"

- name: Keptn - Register API token
  shell: /snap/bin/microk8s.kubectl get secret keptn-api-token -n keptn -ojsonpath={.data.keptn-api-token} | base64 --decode
  register: keptn_api_token_raw

- set_fact:
    keptn_api_token: "{{ keptn_api_token_raw.stdout }}"

- debug: var=keptn_api_token

- name: Keptn - Register Bridge password
  shell: /snap/bin/microk8s.kubectl get secret bridge-credentials -n keptn -o jsonpath={.data.BASIC_AUTH_PASSWORD} | base64 -d
  register: keptn_bridge_password_raw

- set_fact:
    keptn_bridge_password: "{{ keptn_bridge_password_raw.stdout }}"

- debug: var=keptn_bridge_password

- name: Keptn - Register Bridge user
  shell: /snap/bin/microk8s.kubectl get secret bridge-credentials -n keptn -o jsonpath={.data.BASIC_AUTH_USERNAME} | base64 -d
  register: keptn_bridge_user_raw

- set_fact:
    keptn_bridge_user: "{{ keptn_bridge_user_raw.stdout }}"

- debug: var=keptn_bridge_user

- name: Keptn - Create secret dynatrace
  shell: /snap/bin/microk8s.kubectl -n keptn create secret generic dynatrace --from-literal="DT_TENANT={{ dynatrace_tenant_nohttps }}" --from-literal="DT_API_TOKEN={{ dynatrace_api_token }}"  --from-literal="DT_PAAS_TOKEN={{ dynatrace_api_token }}" --from-literal="KEPTN_API_URL={{ custom_domain_protocol }}://keptn.{{ ingress_domain }}/api" --from-literal="KEPTN_API_TOKEN={{ keptn_api_token }}" --from-literal="KEPTN_BRIDGE_URL={{ custom_domain_protocol }}://keptn.{{ ingress_domain }}/bridge"

- name: Keptn - Install Dynatrace service
  become_user: "{{ non_root_user }}"
  shell: helm upgrade --install dynatrace-service -n keptn https://github.com/keptn-contrib/dynatrace-service/releases/download/{{ keptn_dynatrace_service_version }}/dynatrace-service-{{ keptn_dynatrace_service_version }}.tgz

- name: Keptn - Install JMeter service
  become_user: "{{ non_root_user }}"
  shell: helm upgrade --install jmeter-service -n keptn https://github.com/keptn/keptn/releases/download/{{ keptn_version }}/jmeter-service-{{ keptn_version }}.tgz

- name: Keptn - Authenticate CLI
  become_user: "{{ non_root_user }}"
  shell: "/usr/local/bin/keptn auth --api-token {{ keptn_api_token }} --endpoint {{ custom_domain_protocol }}://keptn.{{ ingress_domain }}/api"

