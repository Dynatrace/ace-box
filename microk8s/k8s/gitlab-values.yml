# Default values for gitlab/gitlab chart

## NOTICE
# Due to the scope and complexity of this chart, all possible values are
# not documented in this file. Extensive documentation for these values
# and more can be found at https://gitlab.com/gitlab-org/charts/gitlab/

## Advanced Configuration
# Documentation for advanced configuration can be found under doc/advanced
# - external PostgreSQL
# - external Gitaly
# - external Redis
# - external NGINX
# - PersistentVolume configuration
# - external Object Storage providers

## The global properties are used to configure multiple charts at once.
## Extended documenation at doc/charts/globals.md
global:
    ## GitLab operator is Alpha. Not for production use.
    operator:
      enabled: false
      rollout:
        # Enables automatic pause for deployment rollout. This must be set to `true` to fix
        # Helm's issue with 3-way merge. See:
        #   https://gitlab.com/gitlab-org/charts/gitlab/issues/1262
        #   https://github.com/helm/helm/issues/3805
        autoPause: true
  
    ## doc/installation/deployment.md#deploy-the-community-edition
    edition: ee
  
    ## doc/charts/globals.md#gitlab-version
    # gitlabVersion: master
  
    ## doc/charts/globals.md#application-resource
    application:
      create: false
      links: []
      allowClusterRoles: true
    ## doc/charts/globals.md#configure-host-settings
    hosts:
      domain: "192.168.50.10.nip.io"
      #hostSuffix:
      https: false
      #externalIP:
      #ssh: ~
      #gitlab: {}
      #minio: {}
      #registry: {}
      #tls: {}
  
    ## doc/charts/globals.md#configure-ingress-settings
    ingress:
      class: "nginx"
      configureCertmanager: false
      annotations: {}
      enabled: true
      tls: {}
      #   enabled: true
      #   secretName:
  
    gitlab:
      ## Enterprise license for this GitLab installation
      ## Secret created according to doc/installation/secrets.md#initial-enterprise-license
      ## If allowing shared-secrets generation, this is OPTIONAL.
      #license: {}
        # secret: RELEASE-gitlab-license
        # key: license
  
    ## Initial root password for this GitLab installation
    ## Secret created according to doc/installation/secrets.md#initial-root-password
    ## If allowing shared-secrets generation, this is OPTIONAL.
    initialRootPassword: {}
      # secret: RELEASE-gitlab-initial-root-password
      # key: password
  
    ## doc/charts/globals.md#configure-postgresql-settings
    psql:
      password: {}
        # secret:
        # key:
      # host: postgresql.hostedsomewhere.else
      # port: 123
      # username: gitlab
      # database: gitlabhq_production
      # pool: 10
      # preparedStatements: false
  
    ## doc/charts/globals.md#configure-redis-settings
    redis:
      password:
        enabled: true
        # secret:
        # key:
      # host: redis.hostedsomewhere.else
      # port: 6379
      # sentinels:
      #   - host:
      #     port:
  
    ## doc/charts/globals.md#configure-gitaly-settings
    gitaly:
      enabled: true
      authToken: {}
        # secret:
        # key:
      # serviceName:
      internal:
        names: ['default']
      external: []
      tls:
        enabled: false
        # secretName:
  
    ## doc/charts/globals.md#configure-minio-settings
    minio:
      enabled: true
      credentials: {}
        # secret:
  
    ## doc/charts/globals.md#configure-grafana-integration
    grafana:
      enabled: false
  
    ## doc/charts/globals.md#configure-appconfig-settings
    ## Rails based portions of this chart share many settings
    appConfig:
      ## doc/charts/globals.md#general-application-settings
      enableUsagePing: true
      enableSeatLink: true
      enableImpersonation:
      defaultCanCreateGroup: true
      usernameChangingEnabled: true
      issueClosingPattern:
      defaultTheme:
      defaultProjectsFeatures:
        issues: true
        mergeRequests: true
        wiki: true
        snippets: true
        builds: true
      webhookTimeout:
      maxRequestDurationSeconds:
  
      ## doc/charts/globals.md#cron-jobs-related-settings
      cron_jobs: {}
        ## Flag stuck CI builds as failed
        # stuck_ci_jobs_worker:
        #   cron: "0 * * * *"
        ## Schedule pipelines in the near future
        # pipeline_schedule_worker:
        #   cron: "19 * * * *"
        ## Remove expired build artifacts
        # expire_build_artifacts_worker:
        #   cron: "50 * * * *"
        ## Periodically run 'git fsck' on all repositories.
        # repository_check_worker:
        #   cron: "20 * * * *"
        ## Send admin emails once a week
        # admin_email_worker:
        #   cron: "0 0 * * 0"
        ## Remove outdated repository archives
        # repository_archive_cache_worker:
        #   cron: "0 * * * *"
        ## Verify custom GitLab Pages domains
        # pages_domain_verification_cron_worker:
        #   cron: "*/15 * * * *"
        ## Export pseudonymized data
        # pseudonymizer_worker:
        #   cron: "0 * * * *"
        # schedule_migrate_external_diffs_worker:
        #   cron: "15 * * * *"
        ### GitLab Geo
        # Geo Primary only!
        # geo_prune_event_log_worker:
        #   cron: "*/5 * * * *"
        ## GitLab Geo repository sync worker
        # geo_repository_sync_worker:
        #   cron: "*/5 * * * *"
        ## GitLab Geo file download dispatch worker
        # geo_file_download_dispatch_worker:
        #  cron: "*/10 * * * *"
        ## GitLab Geo repository verification primary batch worker
        # geo_repository_verification_primary_batch_worker:
        #   cron: "*/5 * * * *"
        ## GitLab Geo repository verification secondary scheduler worker
        # geo_repository_verification_secondary_scheduler_worker:
        #   cron: "*/5 * * * *"
        ## GitLab Geo migrated local files clean up worker
        # geo_migrated_local_files_clean_up_worker:
        #   cron: "15 */6 * * *"
        ### LDAP
        # ldap_sync_worker:
        #   cron: "30 1 * * *"
        # ldap_group_sync_worker:
        #   cron: "0 * * * *"
        ### Snapshot active user statistics
        # historical_data_worker:
        #   cron: "0 12 * * *"
  
  
  
      ## doc/charts/globals.md#gravatarlibravatar-settings
      gravatar:
        plainUrl:
        sslUrl:
  
      ## doc/charts/globals.md#hooking-analytics-services-to-the-gitlab-instance
      extra:
        googleAnalyticsId:
        piwikUrl:
        piwikSiteId:
  
      ## doc/charts/globals.md#lfs-artifacts-uploads-packages-external-mr-diffs
      lfs:
        enabled: true
        proxy_download: true
        bucket: git-lfs
        connection: {}
          # secret:
          # key:
      artifacts:
        enabled: true
        proxy_download: true
        bucket: gitlab-artifacts
        connection: {}
          # secret:
          # key:
      uploads:
        enabled: true
        proxy_download: true
        bucket: gitlab-uploads
        connection: {}
          # secret:
          # key:
      packages:
        enabled: true
        proxy_download: true
        bucket: gitlab-packages
        connection: {}
      externalDiffs:
        when:
        proxy_download: true
        bucket: gitlab-mr-diffs
        connection: {}
      terraformState:
        enabled: false
        bucket: gitlab-terraform-state
        connection: {}
  
      ## doc/charts/globals.md#pseudonymizer-settings
      pseudonymizer:
        configMap:
        bucket: gitlab-pseudo
        connection: {}
          # secret:
          # key:
      backups:
        bucket: gitlab-backups
        tmpBucket: tmp
  
      ## doc/charts/globals.md#incoming-email-settings
      ## doc/installation/deployment.md#incoming-email
      incomingEmail:
        enabled: false
        address: ""
        host: "imap.gmail.com"
        port: 993
        ssl: true
        startTls: false
        user: ""
        password:
          secret: ""
          key: password
        expungeDeleted: false
        logger:
          logPath: "/dev/stdout"
        mailbox: inbox
        idleTimeout: 60
  
      ## doc/charts/globals.md#service-desk-email-settings
      ## doc/installation/deployment.md#service-desk-email
      serviceDeskEmail:
        enabled: false
        address: ""
        host: "imap.gmail.com"
        port: 993
        ssl: true
        startTls: false
        user: ""
        password:
          secret: ""
          key: password
        expungeDeleted: false
        logger:
          logPath: "/dev/stdout"
        mailbox: inbox
        idleTimeout: 60
  
      ## doc/charts/globals.md#ldap
      ldap:
        # prevent the use of LDAP for sign-in via web.
        preventSignin: false
        servers: {}
        ## 'main' is the GitLab 'provider ID' of this LDAP server
        # main:
        #   label: 'LDAP'
        #   host: '_your_ldap_server'
        #   port: 636
        #   uid: 'sAMAccountName'
        #   bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
        #   password:
        #     secret: _the_secret_containing_your_ldap_password
        #     key: _the_key_which_holds_your_ldap_password
        #   encryption: 'plain'
  
      ## doc/charts/globals.md#omniauth
      omniauth:
        enabled: false
        autoSignInWithProvider:
        syncProfileFromProvider: []
        syncProfileAttributes: ['email']
        allowSingleSignOn: ['saml']
        blockAutoCreatedUsers: true
        autoLinkLdapUser: false
        autoLinkSamlUser: false
        externalProviders: []
        allowBypassTwoFactor: []
        providers: []
        # - secret: gitlab-google-oauth2
        #   key: provider
      ## doc/charts/globals.md#configure-appconfig-settings
      sentry:
        enabled: false
        dsn:
        clientside_dsn:
        environment:
  
    ## End of global.appConfig
  
    ## doc/charts/geo.md
    geo:
      enabled: false
      # Valid values: primary, secondary
      role: primary
      ## Geo Secondary only
      # nodeName allows multiple instances behind a load balancer.
      nodeName: # defaults to `gitlab.gitlab.host`
      # PostgreSQL connection details only needed for `secondary`
      psql:
        password: {}
          # secret:
          # key:
        # host: postgresql.hostedsomewhere.else
        # port: 123
        # username: gitlab_replicator
        # database: gitlabhq_geo_production
        # ssl:
          # secret:
          # clientKey:
          # clientCertificate:
          # serverCA:
  
    ## doc/charts/globals.md#configure-gitlab-shell-settings
    shell:
      authToken: {}
        # secret:
        # key:
      hostKeys: {}
        # secret:
  
    ## Rails application secrets
    ## Secret created according to doc/installation/secrets.md#gitlab-rails-secret
    ## If allowing shared-secrets generation, this is OPTIONAL.
    railsSecrets: {}
      # secret:
  
    ## Rails generic setting, applicable to all Rails-based containers
    rails:
      bootsnap: # Enable / disable Shopify/Bootsnap cache
        enabled: true
  
    ## doc/charts/globals.md#configure-registry-settings
    registry:
      bucket: registry
      certificate: {}
        # secret:
      httpSecret: {}
        # secret:
        # key:
      # https://docs.docker.com/registry/notifications/#configuration
      notifications: {}
        # endpoints:
        #   - name: FooListener
        #     url: https://foolistener.com/event
        #     timeout: 500ms
        #     threshold: 10
        #     backoff: 1s
        #     headers:
        #       FooBar: ['1', '2']
        #       Authorization:
        #         secret: gitlab-registry-authorization-header
        #       SpecificPassword:
        #         secret: gitlab-registry-specific-password
        #         key: password
        # events: {}
  
    ## GitLab Runner
    ## Secret created according to doc/installation/secrets.md#gitlab-runner-secret
    ## If allowing shared-secrets generation, this is OPTIONAL.
    runner:
      registrationToken: {}
        # secret:
  
    ## doc/installation/deployment.md#outgoing-email
    ## Outgoing email server settings
    smtp:
      enabled: false
      address: smtp.mailgun.org
      port: 2525
      user_name: ""
      ## doc/installation/secrets.md#smtp-password
      password:
        secret: ""
        key: password
      # domain:
      authentication: "plain"
      starttls_auto: false
      openssl_verify_mode: "peer"
  
    ## doc/installation/deployment.md#outgoing-email
    ## Email persona used in email sent by GitLab
    email:
      from: ''
      display_name: GitLab
      reply_to: ''
      subject_suffix: ''
      smime:
        enabled: false
        secretName: ""
        keyName: "tls.key"
        certName: "tls.crt"
  
    ## Timezone for containers.
    time_zone: UTC
  
    ## Global Service Annotations
    service:
      annotations: {}
  
    ## Global Deployment Annotations
    deployment:
      annotations: {}
  
    antiAffinity: soft
  
    ## doc/installation/secrets.md#gitlab-workhorse-secret
    workhorse: {}
      # secret:
      # key:
  
    ## doc/charts/globals.md#configure-webservice
    webservice:
      workerTimeout: 60
  
    ## doc/charts/globals.md#custom-certificate-authorities
    # configuration of certificates container & custom CA injection
    certificates:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
        tag: 20171114-r3
      customCAs: []
      # - secret: custom-CA
      # - secret: more-custom-CAs
  
    ## kubectl image used by hooks to carry out specific jobs
    kubectl:
      image:
        repository: registry.gitlab.com/gitlab-org/build/cng/kubectl
        tag: 1.13.12
        pullSecrets: []
      securityContext:
        # in most base images, this is `nobody:nogroup`
        runAsUser: 65534
        fsGroup: 65534
    busybox:
      image:
        repository: busybox
        tag: latest
  
    ## docs/charts/globals.md#service-accounts
    serviceAccount:
      enabled: false
      create: true
      annotations: {}
      ## Name to be used for serviceAccount, otherwise defaults to chart fullname
      # name:
  
    ## docs/charts/globals/tracing.md#tracing
    tracing:
      connection:
        string: ""
      urlTemplate: ""
  
    ## docs/charts/globals.md
    extraEnv: {}
     # SOME_KEY: some_value
     # SOME_OTHER_KEY: some_other_value
prometheus:
    install: false

nginx-ingress:
    enabled: false

certmanager: 
    install: false